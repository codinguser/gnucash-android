import java.text.SimpleDateFormat

plugins {
    id('com.android.application')
    id('com.google.firebase.crashlytics')
    id('com.google.gms.google-services')
}

def versionMajor = 2
def versionMinor = 4
def versionPatch = 1
def versionBuild = 4

static def buildTime() {
    def df = new SimpleDateFormat("yyyyMMdd HH:mm 'UTC'")
    df.setTimeZone(TimeZone.getTimeZone("UTC"))
    return df.format(new Date())
}

static def gitSha() {
    return 'git rev-parse --short HEAD'.execute().text.trim()
}


android {
    compileSdkVersion 31
    buildToolsVersion '30.0.3'
    defaultConfig {
        applicationId "org.gnucash.android"
        testApplicationId 'org.gnucash.android.test'
        minSdkVersion 19
        targetSdkVersion 31
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        resValue "string", "app_version_name", "${versionName}"
        resValue "string", "app_minor_version", "${versionMinor}"
        buildConfigField "boolean", "CAN_REQUEST_RATING", "false"
        buildConfigField "String", "BUILD_TIME", "\"${buildTime()}\""

        multiDexEnabled true
        testInstrumentationRunner "org.gnucash.android.test.ui.util.GnucashAndroidTestRunner"

    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/NOTICE', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'LICENSE.txt', 'META-INF/NOTICE.txt']
        }
    }


    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "GnucashAndroid_v${variant.versionName}.apk"
        }
    }

    signingConfigs {
        debug {
            storeFile file("../debug.keystore")
        }

        if(project.hasProperty("RELEASE_STORE_FILE")) {
            release {
                storeFile       file(RELEASE_STORE_FILE)
                storePassword   RELEASE_STORE_PASSWORD
                keyAlias        RELEASE_KEY_ALIAS
                keyPassword     RELEASE_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        //todo re-enable proguard and test coverage
        release {
//            minifyEnabled true
//            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (project.hasProperty("RELEASE_STORE_FILE")){
                signingConfig signingConfigs.release
            } else {
                signingConfig signingConfigs.debug
            }
        }
        debug {
            debuggable true
            minifyEnabled false
//            testCoverageEnabled true
            signingConfig signingConfigs.debug
        }
    }
    lintOptions {
        abortOnError false
    }

    flavorDimensions "stability"

    productFlavors {
        development {
            applicationId 'org.gnucash.android.devel'
            testApplicationId 'org.gnucash.android.devel.test'
            resValue "string", "app_name", "GnuCash-devel"
            versionName "${versionMajor}.${versionMinor}.${versionPatch}-dev${versionBuild}_r${gitSha()}"
            resValue "string", "app_version_name", "${versionName}"

            resValue "string", "dropbox_app_key", "dhjh8ke9wf05948"
            resValue "string", "dropbox_app_secret", "h2t9fphj3nr4wkw"
            resValue "string", "manifest_dropbox_app_key", "db-dhjh8ke9wf05948"
        }

        beta {
            resValue "string", "app_name", "GnuCash - beta"
            versionName "${versionMajor}.${versionMinor}.${versionPatch}-beta${versionBuild}"
            resValue "string", "app_version_name", "${versionName}"

            if (project.hasProperty("RELEASE_DROPBOX_APP_KEY")){
                resValue "string", "dropbox_app_key", RELEASE_DROPBOX_APP_KEY
                resValue "string", "dropbox_app_secret", RELEASE_DROPBOX_APP_SECRET
                resValue "string", "manifest_dropbox_app_key", "db-${RELEASE_DROPBOX_APP_KEY}"
            } else {
                resValue "string", "dropbox_app_key", "dhjh8ke9wf05948"
                resValue "string", "dropbox_app_secret", "h2t9fphj3nr4wkw"
                resValue "string", "manifest_dropbox_app_key", "db-dhjh8ke9wf05948"
            }
        }

        production {
            resValue "string", "app_name", "GnuCash"
            buildConfigField "boolean", "CAN_REQUEST_RATING", "true"

            if (project.hasProperty("RELEASE_DROPBOX_APP_KEY")){
                resValue "string", "dropbox_app_key", RELEASE_DROPBOX_APP_KEY
                resValue "string", "dropbox_app_secret", RELEASE_DROPBOX_APP_SECRET
                resValue "string", "manifest_dropbox_app_key", "db-${RELEASE_DROPBOX_APP_KEY}"
            } else {
                resValue "string", "dropbox_app_key", "dhjh8ke9wf05948"
                resValue "string", "dropbox_app_secret", "h2t9fphj3nr4wkw"
                resValue "string", "manifest_dropbox_app_key", "db-dhjh8ke9wf05948"
            }
        }
    }


    compileOptions { //we want switch with strings during xml parsing
        encoding "UTF-8"
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        animationsDisabled true
        unitTests {
            includeAndroidResources = true
        }
    }
}

def androidSupportVersion       = "28.0.0"
def androidEspressoVersion      = "3.0.0"
def androidSupportTestVersion   = "1.0.0"

repositories{
    flatDir{
        dirs 'libs'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.github.nextcloud:android-library:1.0.31'
    implementation('com.android.support:support-v4:'       + androidSupportVersion,
                   'com.android.support:appcompat-v7:'     + androidSupportVersion,
                   'com.android.support:design:'           + androidSupportVersion,
                   'com.android.support:cardview-v7:'      + androidSupportVersion,
                   'com.android.support:preference-v7:'    + androidSupportVersion,
                   'com.android.support:recyclerview-v7:'  + androidSupportVersion,
                   'com.code-troopers.betterpickers:library:3.1.0',
                   'com.github.PhilJay:MPAndroidChart:v2.1.3',
                   'joda-time:joda-time:2.9.4',
                   'com.google.android.gms:play-services-drive:16.1.0',
                   'com.squareup:android-times-square:1.6.5@aar',
                   'com.github.techfreak:wizardpager:1.0.3',
                   'net.objecthunter:exp4j:0.4.7',
                   'org.apache.jackrabbit:jackrabbit-webdav:2.13.3',
                   'com.dropbox.core:dropbox-core-sdk:3.0.3',
            'androidx.multidex:multidex:2.0.0'
    )
    implementation 'com.google.firebase:firebase-crashlytics:18.3.7'
    implementation 'com.google.firebase:firebase-analytics:21.3.0'

    debugImplementation 'com.facebook.stetho:stetho:1.5.0'

    implementation 'com.jakewharton:butterknife:10.0.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'

    testImplementation 'org.robolectric:robolectric:4.3.1'

    testImplementation(
            'junit:junit:4.12',
            'joda-time:joda-time:2.9.4',
            'org.assertj:assertj-core:3.14.0'
    )
    testImplementation 'org.robolectric:shadows-multidex:4.3.1'

    androidTestImplementation (
            'com.android.support:support-annotations:'  + androidSupportVersion,
            'com.android.support.test:runner:'          + androidSupportTestVersion,
            'com.android.support.test:rules:'           + androidSupportTestVersion,
            'com.android.support.test.espresso:espresso-core:'      + androidEspressoVersion,
            'com.android.support.test.espresso:espresso-intents:'   + androidEspressoVersion,
            //the following are only added so that the app and test version both us the same versions
            'com.android.support:appcompat-v7:'     + androidSupportVersion,
            'com.android.support:design:'           + androidSupportVersion)
    androidTestImplementation ('com.android.support.test.espresso:espresso-contrib:'   + androidEspressoVersion) {
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }

    androidTestImplementation('com.squareup.assertj:assertj-android:1.1.1'){
        exclude group: 'com.android.support', module:'support-annotations'
    }
}
